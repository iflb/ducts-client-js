{"version":3,"file":"ducts.min.js","mappings":"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","sources":["webpack://ducts/webpack/universalModuleDefinition","webpack://ducts/./index.js","webpack://ducts/./lib/ducts.js","webpack://ducts/./node_modules/@iflb/lib/lib/lib.js","webpack://ducts/./node_modules/base64-js/index.js","webpack://ducts/./node_modules/buffer/index.js","webpack://ducts/./node_modules/es5-ext/global.js","webpack://ducts/./node_modules/get-random-values/index.js","webpack://ducts/./node_modules/global/window.js","webpack://ducts/./node_modules/ieee754/index.js","webpack://ducts/./node_modules/node-fetch/browser.js","webpack://ducts/./node_modules/pretty-bytes/index.js","webpack://ducts/./node_modules/websocket/lib/browser.js","webpack://ducts/./node_modules/websocket/lib/version.js","webpack://ducts/./node_modules/what-the-pack/browser.js","webpack://ducts/webpack/bootstrap","webpack://ducts/webpack/runtime/global","webpack://ducts/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ducts\"] = factory();\n\telse\n\t\troot[\"ducts\"] = factory();\n})(self, function() {\nreturn ","module.exports = require(\"./lib/ducts\");\n","const MessagePack = require(\"what-the-pack\");\nconst { encode, decode } = MessagePack.initialize(2**22);\nconst WebSocket = require(\"websocket\").w3cwebsocket;\nconst fetch = require(\"node-fetch\");\nconst getRandomValues = require(\"get-random-values\");\nconst Buffer = require('buffer').Buffer;\nconst { ThisBound } = require('@iflb/lib');\n\n//https://github.com/necojackarc/extensible-custom-error/blob/master/src/index.js\nclass DuctError extends Error {\n\n    constructor(message, error = null, ...args) {\n        super(message, error, ...args);\n\n        // Align with Object.getOwnPropertyDescriptor(Error.prototype, 'name')\n        Object.defineProperty(this, 'name', {\n            configurable: true,\n            enumerable: false,\n            value: this.constructor.name,\n            writable: true,\n        });\n\n        // Helper function to merge stack traces\n        const merge = (stackTraceToMerge, baseStackTrace) => {\n            const entriesToMerge = stackTraceToMerge.split('\\n');\n            const baseEntries = baseStackTrace.split('\\n');\n            const newEntries = [];\n            entriesToMerge.forEach((entry) => {\n                if (baseEntries.includes(entry)) {\n                    return;\n                }\n                newEntries.push(entry);\n            });\n            return [...newEntries, ...baseEntries].join('\\n');\n        };\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n            this.stack = error ? merge(this.stack, error.stack) : this.stack;\n        }\n\n    }\n\n};\n\nclass DuctEvent {\n    constructor() {\n    }\n};\n\nclass DuctLoopResponseQueue {\n    constructor() {\n        this._pushedValue = [];\n        this._promiseContext = [];\n    }\n\n    dequeue() {\n        return new Promise((resolve, reject) => {\n            if (this._pushedValue.length > 0) {\n                let { isErrorOccured, data } = this._pushedValue.shift();\n                if (isErrorOccured) {\n                    reject(data);\n                } else {\n                    resolve(data);\n                }\n            } else {\n                this._promiseContext.push(new DuctPromiseContext(resolve, reject));\n            }\n        });\n    }\n\n    enqueue(isErrorOccured, data) {\n        if (this._promiseContext.length > 0) {\n            this._promiseContext.shift().resolve(data);\n        } else {\n            this._pushedValue.push({\n                isErrorOccured: isErrorOccured,\n                data: data,\n            });\n        }\n    }\n};\n\nclass DuctConnectionEvent extends DuctEvent {\n\n    constructor(state, source) {\n        super();\n        this.state = state;\n        this.source = source;\n    }\n\n};\n\nclass DuctMessageEvent extends DuctEvent {\n\n    constructor(rid, eid, data) {\n        super();\n        this.rid = rid;\n        this.eid = eid;\n        this.data = data;\n    }\n\n};\n\nconst State = Object.freeze({\n    CLOSE : -1,\n    OPEN_CONNECTING : WebSocket.CONNECTING,\n    OPEN_CONNECTED : WebSocket.OPEN,\n    OPEN_CLOSING : WebSocket.CONNECTING,\n    OPEN_CLOSED : WebSocket.CLOSED,\n});\n\nclass DuctEventListener {\n\n    constructor() {\n        this.on =\n            (names, func) => {\n            for(let name of (names instanceof Array) ? names : [names]) {\n                if (!(name in this)) {\n                    throw new ReferenceError('[' + name + '] in ' + this.constructor.name);\n                }\n                this[name] = func;\n            }\n\n            };\n\n    }\n};\n\nclass DuctPromiseContext {\n    constructor(resolve, reject) {\n        this.resolve = resolve;\n        this.reject = reject;\n    }\n}\n\nclass ConnectionEventListener extends DuctEventListener {\n    onopen(event){}\n    onclose(event){}\n    onerror(event){}\n    onmessage(event){}\n\n};\n\nclass Duct extends ThisBound {\n\n    constructor() {\n        super();\n        this.WSD = null;\n        this.EVENT = null;\n        this.nextRid = () => {\n            let nextRid = new Date().getTime();\n            if (nextRid <= this.lastRid) {\n                nextRid = this.lastRid + 1;\n            }\n            this.lastRid = nextRid;\n            return nextRid;\n        };\n        this._connectionListener = new ConnectionEventListener();\n        this._eventHandler = {};\n        this.catchallEventHandler = (rid, eid, data) => {};\n        this.uncaughtEventHandler = (rid, eid, data) => {};\n        this.eventErrorHandler = (rid, eid, data, error) => {};\n        this._onopenHandlers = [];\n        this._waitingMessagePromiseContext = {};\n        this._waitingClosedPromiseContext = [];\n        this._chainedPromiseContextForLoop = {};\n        this._loopQueues = {};\n        this._dividedBuffers = {};\n    }\n\n    setEventHandler(self, eventId, handler = null) {\n        if (handler) {\n            self._eventHandler[eventId] = handler;\n        } else {\n            delete self._eventHandler[eventId];\n        }\n    }\n\n    addOnopenHandler(self, handler) {\n        self._onopenHandlers.push(handler);\n    }\n\n    invokeOnOpen(self, handler) {\n        if (self.state === State.OPEN_CONNECTED) handler();\n        else self.addOnopenHandler(handler);\n    }\n\n    get state() {\n        if (this._ws) {\n            return this._ws.readyState;\n        } else {\n            return State.CLOSE;\n        }\n    }\n\n    reconnect(self) {\n        return new Promise(function(resolve, reject) {\n            if (self._ws) {\n                resolve(self);\n                return;\n            }\n            let ws = new WebSocket(self.WSD['websocket_url_reconnect']);\n            ws.binaryType = 'arraybuffer';\n            ws.onopen = (event) => {\n                ws.onerror = (event) => {\n                    self._connectionListener.onerror(new DuctConnectionEvent('onerror', event));\n                };\n                ws.onclose = (event) => {\n                    self._connectionListener.onclose(new DuctConnectionEvent('onclose', event));\n                };\n                ws.onmessage = (event) => {\n                    self._onmessage(new DuctConnectionEvent('onmessage', event));\n                };\n                self._ws = ws;\n                self._onreconnect(event);\n                self._connectionListener.onopen(new DuctConnectionEvent('onopen', event));\n                resolve(self);\n            };\n            ws.onerror = (event) => {\n                self._connectionListener.onerror(new DuctConnectionEvent('onerror', event));\n                reject(event);\n            };\n        });\n    }\n\n    open(self, wsdUrl, uuid = null, params = {}) {\n        return new Promise(function(resolve, reject) {\n            if (self._ws) {\n                resolve(self);\n                return;\n            }\n            let query = uuid != null ? uuid : '?uuid=' + ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c => (c ^ getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n            for (let [key, value] of Object.entries(params)) {\n                query += '&' + key + '=' + value;\n            }\n            fetch(wsdUrl + query, { headers: { 'User-Agent': '' } })\n                .then(response => { return response.json(); })\n                .then(wsd => {\n                    //console.log(wsd);\n                    self.WSD = wsd;\n                    self.EVENT = self.WSD.EVENT;\n                    //console.log(self.WSD.websocket_url);\n                    let ws = new WebSocket(self.WSD['websocket_url']);\n                    ws.binaryType = 'arraybuffer';\n                    ws.onopen = (event) => {\n                        ws.onerror = (event) => {\n                            self._connectionListener.onerror(new DuctConnectionEvent('onerror', event));\n                        };\n                        ws.onclose = (event) => {\n                            self._ws = null;\n                            switch (event.code) {\n                                case 1000:\n                                    for (let promiseContext of self._waitingClosedPromiseContext) {\n                                        promiseContext.resolve(event);\n                                    }\n                                    break;\n                                default:\n                                    for (let promiseContext of self._waitingClosedPromiseContext) {\n                                        promiseContext.reject(event);\n                                    }\n                                    break;\n                            }\n                            self._waitingClosedPromiseContext.splice(0);\n                            self._connectionListener.onclose(new DuctConnectionEvent('onclose', event));\n                        };\n                        ws.onmessage = (event) => {\n                            self._onmessage(new DuctConnectionEvent('onmessage', event));\n                        };\n                        self._ws = ws;\n                        self._onopen(event);\n                        self._connectionListener.onopen(new DuctConnectionEvent('onopen', event));\n                        resolve(self);\n                    };\n                    ws.onerror = (event) => {\n                        self._connectionListener.onerror(new DuctConnectionEvent('onerror', event));\n                        reject(event);\n                    };\n                })\n                .catch((error) => {\n                    //console.error(error);\n                    self._connectionListener.onerror(new DuctConnectionEvent('onerror', error));\n                    reject(error);\n                });\n        });\n    }\n\n    _onopen(self, event) {\n        self._sendTimestamp = (new Date().getTime()) / 1000;\n        self.timeOffset = 0;\n        self.timeLatency = 0;\n        self._timeCount = 0;\n        self.setEventHandler(self.EVENT.ALIVE_MONITORING, self._aliveMonitoringHandler);\n        self.setEventHandler(self.EVENT.LOOP_RESPONSE_START, self._loopResponseHandler);\n        self.setEventHandler(self.EVENT.LOOP_RESPONSE_NEXT, self._loopResponseHandler);\n        self.setEventHandler(self.EVENT.LOOP_RESPONSE_END, self._loopResponseEndHandler);\n        self.setEventHandler(self.EVENT.DIVIDED_RESPONSE_APPEND, self._dividedResponseAppendHandler);\n        self.setEventHandler(self.EVENT.DIVIDED_RESPONSE_END, self._dividedResponseEndHandler);\n        let rid = self.nextRid();\n        let eid = self.EVENT.ALIVE_MONITORING;\n        let value = self._sendTimestamp;\n        self.send(rid, eid, value);\n\n        for(const handler of self._onopenHandlers) handler();\n    }\n\n    _onreconnect(self, event) {\n        // console.log('reconnected');\n    }\n\n    send(self, requestId, eventId, data) {\n        const msgpack = encode([requestId, eventId, data])\n        self._ws.send(msgpack)\n        return requestId;\n    }\n\n    call(self, eid, data = []) {\n        let rid = self.nextRid();\n        self.send(rid, eid, data);\n        return new Promise((resolve, reject) => {\n            self._waitingMessagePromiseContext[rid] = new DuctPromiseContext(resolve, reject);\n        });\n    }\n\n    close(self) {\n        if (self._ws) {\n            self._ws.close();\n            return new Promise((resolve, reject) => {\n                self._waitingClosedPromiseContext.push(new DuctPromiseContext(resolve, reject));\n            });\n        } else {\n            return new Promise(resolve => resolve);\n        }\n    }\n\n    _onmessage(self, event) {\n        try {\n            self._connectionListener.onmessage(event);\n            let [rid, eid, data] = decode(Buffer.from(event.source.data));\n            try {\n                self.catchallEventHandler(rid, eid, data);\n                let handle = self._eventHandler[Math.abs(eid)];\n                if (!handle) handle = self.uncaughtEventHandler;\n                let ret = handle(rid, eid, data);\n                if (ret) {\n                    [rid, eid, data] = ret;\n                }\n                if (rid === null) return; \n                let promiseContext = self._waitingMessagePromiseContext[rid];\n                if (promiseContext) {\n                    delete self._waitingMessagePromiseContext[rid];\n                    if (eid < 0) {\n                        promiseContext.reject(new DuctError(data));\n                    } else {\n                        promiseContext.resolve(data);\n                    }\n                }\n            } catch(error) {\n                self.eventErrorHandler(rid, eid, data, error);\n            }\n        }\n        catch (error) {\n            self.eventErrorHandler(-1, -1, null, error);\n        }\n    }\n\n    _aliveMonitoringHandler(self, rid, eid, data) {\n        let client_received = (new Date().getTime()) / 1000;\n        let serverSent = data[0];\n        let serverReceived = data[1];\n        let clientSent = self._sendTimestamp;\n        // console.log('t0=' + clientSent + ', t1=' + serverReceived + ', t2=' + serverSent + ',t3=' + client_received);\n        let new_offset = ((serverReceived - clientSent) - (client_received - serverSent)) / 2;\n        let new_latency = ((client_received - clientSent) - (serverSent - serverReceived)) / 2;\n        self.timeOffset = (self.timeOffset * self._timeCount + new_offset) / (self._timeCount + 1);\n        self.timeLatency = (self.timeLatency * self._timeCount + new_latency) / (self._timeCount + 1);\n        self._timeCount += 1;\n        // console.log('offset=' + self.timeOffset + ', latency=' + self.timeLatency);\n    }\n\n    _loopResponseHandler(self, rid, eid, data) {\n        let sourceEid = data[1];\n        let sourceData = data[2];\n        self.catchallEventHandler(rid, sourceEid, sourceData);\n        let isErrorOccured = (sourceEid < 0);\n        let handle = self._eventHandler[Math.abs(sourceEid)];\n        if (!handle) handle = self.uncaughtEventHandler;\n        let ret = handle(rid, sourceEid, sourceData);\n        let handledData = (ret)? ret : sourceData;\n        if (!self._loopQueues[rid]) {\n            self._loopQueues[rid] = new DuctLoopResponseQueue();\n        }\n        let queue = self._loopQueues[rid];\n        queue.enqueue(isErrorOccured, handledData);\n        return [rid, sourceEid, queue];\n    }\n\n    _loopResponseEndHandler(self, rid, eid, data) {\n        let sourceEid = data[1];\n        let sourceData = data[2];\n        self.catchallEventHandler(rid, sourceEid, sourceData);\n        let isErrorOccured = (sourceEid < 0);\n        let handle = self._eventHandler[Math.abs(sourceEid)];\n        if (!handle) handle = self.uncaughtEventHandler;\n        handle(rid, sourceEid, sourceData);\n        let queue = self._loopQueues[rid];\n        queue.enqueue(isErrorOccured, null);\n        return [rid, sourceEid, sourceData];\n    }\n\n    _dividedResponseAppendHandler(self, rid, eid, data) {\n        let dividedBuffer = self._dividedBuffers[rid];\n        if (!dividedBuffer) {\n            dividedBuffer = new Array();\n            self._dividedBuffers[rid] = dividedBuffer;\n        }\n        if (data) {\n            dividedBuffer.push(data)\n        }\n        return [null, eid, null];\n    }\n\n    _dividedResponseEndHandler(self, rid, eid, data) {\n        let dividedBuffer = self._dividedBuffers[rid];\n        delete self._dividedBuffers[rid];\n        let byteSize = 0\n        for (let data of dividedBuffer) {\n            byteSize += data.length;\n        }\n        let mergedBuffer = new Uint8Array(byteSize);\n        let writeOffset = 0;\n        for (let data of dividedBuffer) {\n            mergedBuffer.set(data, writeOffset);\n            writeOffset += data.length;\n        }\n        let [sourceRid, sourceEid, sourceData] = decode(Buffer.from(mergedBuffer));\n        self.catchallEventHandler(sourceRid, sourceEid, sourceData);\n        let handle = self._eventHandler[Math.abs(sourceEid)];\n        if (!handle) handle = self.uncaughtEventHandler;\n        handle(sourceRid, sourceEid, sourceData);\n        return [sourceRid, sourceEid, sourceData];\n    }\n};\n\nmodule.exports = {\n    DuctError,\n    DuctEvent,\n    DuctLoopResponseQueue,\n    DuctConnectionEvent,\n    DuctMessageEvent,\n    State,\n    DuctEventListener,\n    ConnectionEventListener,\n    Duct\n};\n","class ThisKeywordProhibitedError extends Error {}\n\nconst thisKeywordProhibitedProxyObject = new Proxy(\n    { referenceError: new ThisKeywordProhibitedError('using \\'this\\' keyword is prohibited. use \\'self\\'(1st argument) instead.') },\n    {\n        get(target) { throw target.referenceError; },\n        set(target) { throw target.referenceError; },\n    },\n);\n\nclass ThisBound {\n    constructor() {\n        let currentPrototype = Object.getPrototypeOf(this);\n        while (currentPrototype !== ThisBound.prototype) {\n            let methodNames = Object.getOwnPropertyNames(currentPrototype);\n            methodNames.splice(methodNames.indexOf('constructor'), 1);\n            for (let methodName of methodNames) {\n                let isThisAlreadyBoundToObject = Object.getOwnPropertyNames(this).includes(methodName);\n                let isPropertyFunction = Object.getOwnPropertyDescriptor(currentPrototype, methodName).value instanceof Function;\n                if (isPropertyFunction && !isThisAlreadyBoundToObject) {\n                    this[methodName] = this[methodName].bind(thisKeywordProhibitedProxyObject, this);\n                }\n            }      \n            currentPrototype = Object.getPrototypeOf(currentPrototype);\n        }\n    }\n}\n\nexports.ThisBound = ThisBound;\nexports.ThisKeywordProhibitedError = ThisKeywordProhibitedError;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var window = require('global/window');\nvar nodeCrypto = require('crypto');\n\nfunction getRandomValues(buf) {\n  if (window.crypto && window.crypto.getRandomValues) {\n    return window.crypto.getRandomValues(buf);\n  }\n  if (typeof window.msCrypto === 'object' && typeof window.msCrypto.getRandomValues === 'function') {\n    return window.msCrypto.getRandomValues(buf);\n  }\n  if (nodeCrypto.randomBytes) {\n    if (!(buf instanceof Uint8Array)) {\n      throw new TypeError('expected Uint8Array');\n    }\n    if (buf.length > 65536) {\n      var e = new Error();\n      e.code = 22;\n      e.message = 'Failed to execute \\'getRandomValues\\' on \\'Crypto\\': The ' +\n        'ArrayBufferView\\'s byte length (' + buf.length + ') exceeds the ' +\n        'number of bytes of entropy available via this API (65536).';\n      e.name = 'QuotaExceededError';\n      throw e;\n    }\n    var bytes = nodeCrypto.randomBytes(buf.length);\n    buf.set(bytes);\n    return buf;\n  }\n  else {\n    throw new Error('No secure random number generator available.');\n  }\n}\n\nmodule.exports = getRandomValues;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","'use strict';\n\nconst BYTE_UNITS = [\n\t'B',\n\t'kB',\n\t'MB',\n\t'GB',\n\t'TB',\n\t'PB',\n\t'EB',\n\t'ZB',\n\t'YB'\n];\n\nconst BIBYTE_UNITS = [\n\t'B',\n\t'kiB',\n\t'MiB',\n\t'GiB',\n\t'TiB',\n\t'PiB',\n\t'EiB',\n\t'ZiB',\n\t'YiB'\n];\n\nconst BIT_UNITS = [\n\t'b',\n\t'kbit',\n\t'Mbit',\n\t'Gbit',\n\t'Tbit',\n\t'Pbit',\n\t'Ebit',\n\t'Zbit',\n\t'Ybit'\n];\n\nconst BIBIT_UNITS = [\n\t'b',\n\t'kibit',\n\t'Mibit',\n\t'Gibit',\n\t'Tibit',\n\t'Pibit',\n\t'Eibit',\n\t'Zibit',\n\t'Yibit'\n];\n\n/*\nFormats the given number using `Number#toLocaleString`.\n- If locale is a string, the value is expected to be a locale-key (for example: `de`).\n- If locale is true, the system default locale is used for translation.\n- If no value for locale is specified, the number is returned unmodified.\n*/\nconst toLocaleString = (number, locale, options) => {\n\tlet result = number;\n\tif (typeof locale === 'string' || Array.isArray(locale)) {\n\t\tresult = number.toLocaleString(locale, options);\n\t} else if (locale === true || options !== undefined) {\n\t\tresult = number.toLocaleString(undefined, options);\n\t}\n\n\treturn result;\n};\n\nmodule.exports = (number, options) => {\n\tif (!Number.isFinite(number)) {\n\t\tthrow new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);\n\t}\n\n\toptions = Object.assign({bits: false, binary: false}, options);\n\n\tconst UNITS = options.bits ?\n\t\t(options.binary ? BIBIT_UNITS : BIT_UNITS) :\n\t\t(options.binary ? BIBYTE_UNITS : BYTE_UNITS);\n\n\tif (options.signed && number === 0) {\n\t\treturn ` 0 ${UNITS[0]}`;\n\t}\n\n\tconst isNegative = number < 0;\n\tconst prefix = isNegative ? '-' : (options.signed ? '+' : '');\n\n\tif (isNegative) {\n\t\tnumber = -number;\n\t}\n\n\tlet localeOptions;\n\n\tif (options.minimumFractionDigits !== undefined) {\n\t\tlocaleOptions = {minimumFractionDigits: options.minimumFractionDigits};\n\t}\n\n\tif (options.maximumFractionDigits !== undefined) {\n\t\tlocaleOptions = Object.assign({maximumFractionDigits: options.maximumFractionDigits}, localeOptions);\n\t}\n\n\tif (number < 1) {\n\t\tconst numberString = toLocaleString(number, options.locale, localeOptions);\n\t\treturn prefix + numberString + ' ' + UNITS[0];\n\t}\n\n\tconst exponent = Math.min(Math.floor(options.binary ? Math.log(number) / Math.log(1024) : Math.log10(number) / 3), UNITS.length - 1);\n\t// eslint-disable-next-line unicorn/prefer-exponentiation-operator\n\tnumber /= Math.pow(options.binary ? 1024 : 1000, exponent);\n\n\tif (!localeOptions) {\n\t\tnumber = number.toPrecision(3);\n\t}\n\n\tconst numberString = toLocaleString(Number(number), options.locale, localeOptions);\n\n\tconst unit = UNITS[exponent];\n\n\treturn prefix + numberString + ' ' + unit;\n};\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n","\n/* eslint-disable no-console */\n\nconst pb = require('pretty-bytes');\nconst Buffer = require('buffer').Buffer;\n\nconst initialize = (tempBufferLength, logFunction) => {\n  if (typeof tempBufferLength !== 'number' || Number.isNaN(tempBufferLength) === true) {\n    throw Error('@initialize : expecting \"tempBufferLength\" to be a number.');\n  }\n  if (tempBufferLength < 1) {\n    throw Error('@initialize : expecting \"tempBufferLength\" to be greater than zero.');\n  }\n  if (logFunction !== undefined) {\n    if (typeof logFunction !== 'function') {\n      throw Error('@initialize : expecting \"logFunction\" to be a function.');\n    }\n    logFunction(`@initialize : setting buffer limit to ${pb(tempBufferLength)}`);\n  }\n  const dictionary = {};\n  let dictionaryEnabled = false;\n  let dictionaryOffset = -33;\n  /**\n   * Why -33:\n   * - This allows us to use the negative (-32 to -1) and positive fixint range (0 to 127)\n   * - So instead of encoding the whole key string, we only encode a single byte\n   * - That's (32 + 128) = 160 of your first entries being encoded in a single damn byte\n   */\n  const register = (...args) => {\n    if (dictionaryEnabled === false) dictionaryEnabled = true;\n    for (let i = 0, l = args.length; i < l; i += 1) {\n      dictionaryOffset += 1;\n      dictionary[dictionaryOffset] = args[i];\n      dictionary[args[i]] = dictionaryOffset;\n    }\n  };\n  const tempEncodeBuffer = Buffer.allocUnsafe(tempBufferLength).fill(0);\n  let tempEncodeBufferOffset = -1;\n  const internalEncode = (value) => {\n    let length = 0;\n    switch (typeof value) {\n      case 'string':\n        length = Buffer.byteLength(value);\n        if (length < 32) { // < 32, fixstr\n          length = 0;\n          for (let i = 0, c = 0, l = value.length; i < l; i += 1) {\n            c = value.charCodeAt(i);\n            if (c < 128) {\n              length += 1;\n            } else if (c < 1280) {\n              length += 2;\n            } else if (c < 55296 || c >= 57344) {\n              length += 3;\n            } else {\n              i += 1;\n              length += 4;\n            }\n          }\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length | 160;\n          for (let i = 0, c = 0, l = value.length; i < l; i += 1) {\n            c = value.charCodeAt(i);\n            if (c < 128) {\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = c;\n            } else if (c < 1280) {\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 192 | (c >> 6);\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c & 63);\n            } else if (c < 55296 || c >= 57344) {\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 224 | (c >> 12);\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c >> 6) & 63;\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c & 63);\n            } else {\n              i += 1;\n              c = 65536 + (((c & 1023) << 10) | (value.charCodeAt(i) & 1023));\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 240 | (c >> 18);\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c >> 12) & 63;\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c >> 6) & 63;\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c & 63);\n            }\n          }\n        } else if (length < 256) { // str8\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 217;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          tempEncodeBuffer.write(value, tempEncodeBufferOffset += 1, length, 'utf8');\n          tempEncodeBufferOffset += length - 1;\n        } else if (length < 65536) { // str16\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 218;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          tempEncodeBuffer.write(value, tempEncodeBufferOffset += 1, length, 'utf8');\n          tempEncodeBufferOffset += length - 1;\n        } else if (length < 4294967296) { // str32\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 219;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 24;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 16;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          tempEncodeBuffer.write(value, tempEncodeBufferOffset += 1, length, 'utf8');\n          tempEncodeBufferOffset += length - 1;\n        } else {\n          throw Error('@internalEncode : Max supported string length (4294967296) exceeded, encoding failure.');\n        }\n        break;\n      case 'number':\n        if (Number.isFinite(value) === false) {\n          if (Number.isNaN(value) === true) { // NaN, fixext 1, type = 0, data = 1\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 212;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 0;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 1;\n            break;\n          }\n          if (value === Infinity) { // +Infinity, fixext 1, type = 0, data = 2\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 212;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 0;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 2;\n            break;\n          }\n          if (value === -Infinity) { // -Infinity, fixext 1, type = 0, data = 3\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 212;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 0;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 3;\n            break;\n          }\n        }\n        if (Math.floor(value) !== value) {\n          if (Math.fround(value) === value) {\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 202;\n            tempEncodeBuffer.writeFloatBE(value, tempEncodeBufferOffset += 1);\n            tempEncodeBufferOffset += 3;\n            break;\n          } else {\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 203;\n            tempEncodeBuffer.writeDoubleBE(value, tempEncodeBufferOffset += 1);\n            tempEncodeBufferOffset += 7;\n            break;\n          }\n        }\n        if (value >= 0) {\n          if (value < 128) { // positive fixint\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value < 256) { // uint 8\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 204;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value < 65536) {  // uint 16\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 205;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value < 4294967296) { // uint 32\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 206;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 24;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 16;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          // uint 64\n          let hi = (value / Math.pow(2, 32)) >> 0, lo = value >>> 0;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 207;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 24;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 16;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 24;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 16;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo;\n        } else {\n          if (value >= -32) { // negative fixint\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value >= -128) { // int 8\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 208;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value >= -12800) { // int 16\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 209;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value >= -128000000) { // int 32\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 210;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 24;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 16;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          // int 64\n          let hi = Math.floor(value / Math.pow(2, 32)), lo = value >>> 0;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 211;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 24;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 16;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 24;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 16;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo;\n        }\n        break;\n      case 'object':\n        if (value === null) { // null\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 192;\n          break;\n        }\n        if (Array.isArray(value) === true) {\n          length = value.length;\n          if (length < 16) { // fixarray\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length | 144;\n          } else if (length < 65536) { // array 16\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 220;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          } else if (length < 4294967296) { // array 32\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 221;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 24;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 16;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          } else {\n            throw new Error('@internalEncode : Array too large');\n          }\n          for (let i = 0; i < length; i += 1) {\n            internalEncode(value[i]);\n          }\n          break;\n        }\n        if (value instanceof ArrayBuffer) { // arraybuffer to buffer\n          value = Buffer.from(value);\n        }\n        if (\n          value instanceof Buffer === false &&\n          (\n            value instanceof Int8Array\n            || value instanceof Int16Array\n            || value instanceof Int32Array\n            || value instanceof Uint8Array\n            || value instanceof Uint8ClampedArray\n            || value instanceof Uint16Array\n            || value instanceof Uint32Array\n            || value instanceof Float32Array\n            || value instanceof Float64Array\n          )\n        ) {\n          let temp = Buffer.from(value.buffer);\n          if (value.byteLength !== value.buffer.byteLength) {\n            temp = temp.slice(value.byteOffset, value.byteOffset + value.byteLength)\n          }\n          value = temp;\n        }\n        if (value instanceof Buffer) { // typedarrays and buffer\n          length = value.length;\n          if (length < 256) { // bin8\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 196;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n            if (length > 32) {\n              value.copy(tempEncodeBuffer, tempEncodeBufferOffset += 1, 0, length);\n              tempEncodeBufferOffset += length - 1;\n            } else {\n              for (let i = 0; i < length; i++) {\n                tempEncodeBuffer[tempEncodeBufferOffset += 1] = value[i];\n              }\n            }\n          } else if (length < 65536) { // bin16\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 197;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n            value.copy(tempEncodeBuffer, tempEncodeBufferOffset += 1, 0, length);\n            tempEncodeBufferOffset += length - 1;\n          } else if (length < 4294967296) { // bin32\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 198;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 24;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 16;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n            value.copy(tempEncodeBuffer, tempEncodeBufferOffset += 1, 0, length);\n            tempEncodeBufferOffset += length - 1;\n          } else {\n            throw Error('@internalEncode : Max supported buffer length (4294967296) exceeded, encoding failure.');\n          }\n          break;\n        } else { // plain javascript object\n          let keys = Object.keys(value);\n          length = keys.length;\n          if (length < 16) { // fixmap\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length | 128;\n          } else if (length < 65536) { // map16\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 222;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          } else if (length < 4294967296) { // map32\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 223;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 24;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 16;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          } else {\n            throw new Error('@internalEncode : Object too large');\n          }\n          if (dictionaryEnabled === true) {\n            for (let i = 0; i < length; i += 1) {\n              internalEncode(dictionary[keys[i]] || keys[i]);\n              internalEncode(value[keys[i]]);\n            }\n          } else {\n            for (let i = 0; i < length; i += 1) {\n              internalEncode(keys[i]);\n              internalEncode(value[keys[i]]);\n            }\n          }\n        }\n        break;\n      default:\n        switch (value) {\n          case true:  // true\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] =  195;\n            break;\n          case false: // false\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] =  194;\n            break;\n          case undefined: // undefined, fixext 1, type = 0, data = 0\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 212;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 0;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 0;\n            break;\n          default:\n            throw Error('@internalEncode : Error encoding value.');\n        }\n    }\n  };\n  const encode = (value) => {\n    tempEncodeBufferOffset = -1;\n    internalEncode(value);\n    const encoded = Buffer.allocUnsafe(tempEncodeBufferOffset + 1).fill(0);\n    tempEncodeBuffer.copy(encoded, 0, 0, tempEncodeBufferOffset + 1);\n    return encoded;\n  };\n  let tempDecodeBuffer = undefined;\n  let tempDecodeBufferOffset = 0;\n  const internalDecode = () => {\n    let value, length;\n    if (tempDecodeBuffer[tempDecodeBufferOffset] < 192) {\n      if (tempDecodeBuffer[tempDecodeBufferOffset] < 128) { // positive fixint\n        value = tempDecodeBuffer[tempDecodeBufferOffset];\n        tempDecodeBufferOffset += 1;\n        return value;\n      } else if (tempDecodeBuffer[tempDecodeBufferOffset] < 144) { // fixmap\n        length = tempDecodeBuffer[tempDecodeBufferOffset] & 31;\n        value = {};\n        tempDecodeBufferOffset += 1;\n        if (dictionaryEnabled === true) {\n          for (let i = 0, key; i < length; i++) {\n            key = internalDecode();\n            value[dictionary[key] || key] = internalDecode();\n          }\n        } else {\n          for (let i = 0; i < length; i++) {\n            value[internalDecode()] = internalDecode();\n          }\n        }\n        return value;\n      } else if (tempDecodeBuffer[tempDecodeBufferOffset] < 160) { // fixarray\n        length = tempDecodeBuffer[tempDecodeBufferOffset] & 15;\n        tempDecodeBufferOffset += 1;\n        value = new Array(length);\n        for (let i = 0; i < length; i += 1) {\n          value[i] = internalDecode();\n        }\n        return value;\n      } else { // fixstr\n        length = tempDecodeBuffer[tempDecodeBufferOffset] & 31;\n        tempDecodeBufferOffset += 1;\n        value = tempDecodeBuffer.toString('utf8', tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n        tempDecodeBufferOffset += length;\n        return value;\n      }\n    } else if (tempDecodeBuffer[tempDecodeBufferOffset] > 223) { // negative fixint\n      value = (255 - tempDecodeBuffer[tempDecodeBufferOffset] + 1) * -1;\n      tempDecodeBufferOffset += 1;\n      return value;\n    } else {\n      switch (tempDecodeBuffer[tempDecodeBufferOffset]) {\n        case 202: // float 32\n          value = tempDecodeBuffer.readFloatBE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          return value;\n        case 203: // float 64\n          value = tempDecodeBuffer.readDoubleBE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 8;\n          return value;\n        case 204: // uint 8\n          value = tempDecodeBuffer.readUInt8(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 1;\n          return value;\n        case 205: // uint 16\n          value = tempDecodeBuffer.readUInt16BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 2;\n          return value;\n        case 206: // uint 32\n          value = tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          return value;\n        case 207: // uint 64\n          value = ( tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1) * Math.pow(2, 32) ) + tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 4);\n          tempDecodeBufferOffset += 4;\n          return value;\n        case 208: // int 8\n          value = tempDecodeBuffer.readInt8(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 1;\n          return value;\n        case 209: // int 16\n          value = tempDecodeBuffer.readInt16BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 2;\n          return value;\n        case 210: // int 32\n          value = tempDecodeBuffer.readInt32BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          return value;\n        case 211: // int 64\n          value = ( tempDecodeBuffer.readInt32BE(tempDecodeBufferOffset += 1) * Math.pow(2, 32) ) + tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 4);\n          tempDecodeBufferOffset += 4;\n          return value;\n\n        case 217: // str 8\n          length = tempDecodeBuffer.readUInt8(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 1;\n          value = tempDecodeBuffer.toString('utf8', tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n        case 218: // str 16\n          length = tempDecodeBuffer.readUInt16BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 2;\n          value = tempDecodeBuffer.toString('utf8', tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n        case 219: // str 32\n          length = tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          value = tempDecodeBuffer.toString('utf8', tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n\n        case 212: // fixext 1\n          switch ( tempDecodeBuffer.readInt8(tempDecodeBufferOffset += 1) ) { // fixext 1, type = ?\n            case 0:\n              switch ( tempDecodeBuffer.readInt8(tempDecodeBufferOffset += 1) ) { // fixext 1, type = 0, data = ?\n                case 0: // undefined, fixext 1, type = 0, data = 0\n                  value = undefined;\n                  tempDecodeBufferOffset += 1;\n                  return value;\n                case 1: // NaN, fixext 1, type = 0, data = 1\n                  value = NaN;\n                  tempDecodeBufferOffset += 1;\n                  return value;\n                case 2: // +Infinity, fixext 1, type = 0, data = 2\n                  value = Infinity;\n                  tempDecodeBufferOffset += 1;\n                  return value;\n                case 3: // -Infinity, fixext 1, type = 0, data = 3\n                  value = -Infinity;\n                  tempDecodeBufferOffset += 1;\n                  return value;\n              }\n            break;\n          }\n          break;\n        case 192: // nil\n          value = null;\n          tempDecodeBufferOffset += 1;\n          return value;\n        case 194: // false\n          value = false;\n          tempDecodeBufferOffset += 1;\n          return value;\n        case 195: // true\n          value = true;\n          tempDecodeBufferOffset += 1;\n          return value;\n        case 220: // array16\n          length = tempDecodeBuffer.readUInt16BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 2;\n          value = new Array(length);\n          for (let i = 0; i < length; i += 1) {\n            value[i] = internalDecode();\n          }\n          return value;\n        case 221: // array32\n          length = tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          value = new Array(length);\n          for (let i = 0; i < length; i += 1) {\n            value[i] = internalDecode();\n          }\n          return value;\n        case 222: // map16\n          length = tempDecodeBuffer.readUInt16BE(tempDecodeBufferOffset += 1);\n          value = {};\n          tempDecodeBufferOffset += 2;\n          if (dictionaryEnabled === true) {\n            for (let i = 0, key; i < length; i++) {\n              key = internalDecode();\n              value[dictionary[key] || key] = internalDecode();\n            }\n          } else {\n            for (let i = 0; i < length; i++) {\n              value[internalDecode()] = internalDecode();\n            }\n          }\n          return value;\n        case 223: // map32\n          length = tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1);\n          value = {};\n          tempDecodeBufferOffset += 4;\n          if (dictionaryEnabled === true) {\n            for (let i = 0, key; i < length; i++) {\n              key = internalDecode();\n              value[dictionary[key] || key] = internalDecode();\n            }\n          } else {\n            for (let i = 0; i < length; i++) {\n              value[internalDecode()] = internalDecode();\n            }\n          }\n          return value;\n        case 196: // bin8\n          length = tempDecodeBuffer.readUInt8(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 1;\n          value = tempDecodeBuffer.slice(tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n        case 197: // bin16\n          length = tempDecodeBuffer.readUInt16BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 2;\n          value = tempDecodeBuffer.slice(tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n        case 198: // bin32\n          length = tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          value = tempDecodeBuffer.slice(tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n      }\n      throw Error('@internalDecode : Error decoding value.');\n    }\n  };\n  const decode = (buffer) => {\n    tempDecodeBuffer = buffer;\n    tempDecodeBufferOffset = 0;\n    const result = internalDecode();\n    tempDecodeBuffer = undefined;\n    return result;\n  };\n  return { encode, decode, register };\n};\n\nmodule.exports = { initialize, Buffer };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(10);\n"],"names":["root","factory","exports","module","define","amd","self","MessagePack","encode","decode","initialize","WebSocket","fetch","getRandomValues","Buffer","ThisBound","DuctError","Error","constructor","message","error","args","super","Object","defineProperty","this","configurable","enumerable","value","name","writable","captureStackTrace","stack","stackTraceToMerge","baseStackTrace","entriesToMerge","split","baseEntries","newEntries","forEach","entry","includes","push","join","merge","DuctEvent","DuctLoopResponseQueue","_pushedValue","_promiseContext","dequeue","Promise","resolve","reject","length","isErrorOccured","data","shift","DuctPromiseContext","enqueue","DuctConnectionEvent","state","source","State","freeze","CLOSE","OPEN_CONNECTING","CONNECTING","OPEN_CONNECTED","OPEN","OPEN_CLOSING","OPEN_CLOSED","CLOSED","DuctEventListener","on","names","func","Array","ReferenceError","ConnectionEventListener","onopen","event","onclose","onerror","onmessage","DuctMessageEvent","rid","eid","Duct","WSD","EVENT","nextRid","Date","getTime","lastRid","_connectionListener","_eventHandler","catchallEventHandler","uncaughtEventHandler","eventErrorHandler","_onopenHandlers","_waitingMessagePromiseContext","_waitingClosedPromiseContext","_chainedPromiseContextForLoop","_loopQueues","_dividedBuffers","setEventHandler","eventId","handler","addOnopenHandler","invokeOnOpen","_ws","readyState","reconnect","ws","binaryType","_onmessage","_onreconnect","open","wsdUrl","uuid","params","query","replace","c","Uint8Array","toString","key","entries","headers","then","response","json","wsd","code","promiseContext","splice","_onopen","catch","_sendTimestamp","timeOffset","timeLatency","_timeCount","ALIVE_MONITORING","_aliveMonitoringHandler","LOOP_RESPONSE_START","_loopResponseHandler","LOOP_RESPONSE_NEXT","LOOP_RESPONSE_END","_loopResponseEndHandler","DIVIDED_RESPONSE_APPEND","_dividedResponseAppendHandler","DIVIDED_RESPONSE_END","_dividedResponseEndHandler","send","requestId","msgpack","call","close","from","handle","Math","abs","ret","client_received","serverSent","serverReceived","clientSent","new_offset","new_latency","sourceEid","sourceData","handledData","queue","dividedBuffer","byteSize","mergedBuffer","writeOffset","set","sourceRid","ThisKeywordProhibitedError","thisKeywordProhibitedProxyObject","Proxy","referenceError","get","target","currentPrototype","getPrototypeOf","prototype","methodNames","getOwnPropertyNames","indexOf","methodName","isThisAlreadyBoundToObject","getOwnPropertyDescriptor","Function","bind","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","K_MAX_LENGTH","createBuffer","RangeError","buf","setPrototypeOf","arg","encodingOrOffset","TypeError","allocUnsafe","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","fromObject","toPrimitive","assertSize","size","array","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","max","trim","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","Infinity","leadSurrogate","base64clean","src","dst","alphabet","table","i16","naiveFallback","window","globalThis","__global__","nodeCrypto","crypto","msCrypto","randomBytes","win","g","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","floor","log","LN2","global","getGlobal","Headers","Request","Response","BYTE_UNITS","BIBYTE_UNITS","BIT_UNITS","BIBIT_UNITS","number","locale","options","result","UNITS","assign","bits","binary","signed","isNegative","prefix","localeOptions","minimumFractionDigits","maximumFractionDigits","exponent","log10","toPrecision","_globalThis","NativeWebSocket","MozWebSocket","websocket_version","W3CWebSocket","uri","protocols","prop","pb","tempBufferLength","logFunction","dictionary","dictionaryEnabled","dictionaryOffset","tempEncodeBuffer","tempEncodeBufferOffset","internalEncode","l","fround","Int8Array","Int16Array","Int32Array","Uint8ClampedArray","Uint16Array","Uint32Array","Float32Array","Float64Array","temp","keys","tempDecodeBuffer","tempDecodeBufferOffset","internalDecode","encoded","register","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}