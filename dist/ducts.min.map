{"version":3,"sources":["webpack://ducts/webpack/universalModuleDefinition","webpack://ducts/./index.js","webpack://ducts/./lib/ducts.js","webpack://ducts/./node_modules/base64-js/index.js","webpack://ducts/./node_modules/buffer/index.js","webpack://ducts/./node_modules/es5-ext/global.js","webpack://ducts/./node_modules/get-random-values/index.js","webpack://ducts/./node_modules/global/window.js","webpack://ducts/./node_modules/ieee754/index.js","webpack://ducts/./node_modules/node-fetch/browser.js","webpack://ducts/./node_modules/pretty-bytes/index.js","webpack://ducts/./node_modules/websocket/lib/browser.js","webpack://ducts/./node_modules/websocket/lib/version.js","webpack://ducts/./node_modules/what-the-pack/browser.js","webpack://ducts/webpack/bootstrap","webpack://ducts/webpack/startup","webpack://ducts/webpack/runtime/global"],"names":["root","factory","exports","module","define","amd","self","MessagePack","encode","decode","initialize","WebSocket","fetch","getRandomValues","Buffer","DuctError","Error","message","error","args","super","Object","defineProperty","this","configurable","enumerable","value","constructor","name","writable","captureStackTrace","stack","stackTraceToMerge","baseStackTrace","entriesToMerge","split","baseEntries","newEntries","forEach","entry","includes","push","join","merge","DuctEvent","DuctConnectionEvent","state","source","State","freeze","CLOSE","OPEN_CONNECTING","CONNECTING","OPEN_CONNECTED","OPEN","OPEN_CLOSING","OPEN_CLOSED","CLOSED","DuctEventListener","on","names","func","Array","ReferenceError","ConnectionEventListener","event","DuctMessageEvent","rid","eid","data","Duct","WSD","EVENT","next_rid","next_id","Date","getTime","last_rid","open","wsd_url","uuid","params","_open","reconnect","_reconnect","send","request_id","event_id","_send","close","_close","_connection_listener","_event_handler","setEventHandler","handler","catchall_event_handler","uncaught_event_handler","event_error_handler","onopen_handlers","add_onopen_handler","invoke_on_open","_ws","readyState","wsd","Promise","resolve","reject","ws","websocket_url_reconnect","binaryType","onopen","onerror","onclose","onmessage","_onmessage","_onreconnect","query","replace","c","Uint8Array","toString","key","entries","headers","then","response","json","websocket_url","_onopen","catch","_send_timestamp","time_offset","time_latency","_time_count","ALIVE_MONITORING","client_received","server_sent","server_received","client_sent","new_offset","new_latency","msgpack","from","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","code","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","K_MAX_LENGTH","createBuffer","RangeError","buf","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","fromObject","toPrimitive","assertSize","size","array","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","get","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","trim","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","Infinity","leadSurrogate","base64clean","src","dst","alphabet","table","i16","naiveFallback","window","globalThis","__global__","nodeCrypto","crypto","msCrypto","randomBytes","win","g","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","isNaN","floor","log","LN2","global","getGlobal","default","bind","Headers","Request","Response","BYTE_UNITS","BIBYTE_UNITS","BIT_UNITS","BIBIT_UNITS","number","locale","result","options","UNITS","assign","bits","binary","signed","isNegative","prefix","exponent","log10","toPrecision","_globalThis","NativeWebSocket","MozWebSocket","websocket_version","W3CWebSocket","uri","protocols","prop","pb","tempBufferLength","logFunction","dictionary","dictionaryEnabled","dictionaryOffset","tempEncodeBuffer","tempEncodeBufferOffset","internalEncode","l","fround","Int8Array","Int16Array","Int32Array","Uint8ClampedArray","Uint16Array","Uint32Array","Float32Array","Float64Array","temp","keys","tempDecodeBuffer","tempDecodeBufferOffset","internalDecode","encoded","register","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","Function"],"mappings":"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","file":"ducts.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ducts\"] = factory();\n\telse\n\t\troot[\"ducts\"] = factory();\n})(self, function() {\nreturn ","module.exports = require(\"./lib/ducts\");\n","const MessagePack = require(\"what-the-pack\");\nconst { encode, decode } = MessagePack.initialize(2**22);\nconst WebSocket = require(\"websocket\").w3cwebsocket;\nconst fetch = require(\"node-fetch\");\nconst getRandomValues = require(\"get-random-values\");\nconst Buffer = require('buffer').Buffer;\n\n//https://github.com/necojackarc/extensible-custom-error/blob/master/src/index.js\nclass DuctError extends Error {\n    \n    constructor(message, error=null, ...args) {\n\tsuper(message, error, ...args);\n\n\t// Align with Object.getOwnPropertyDescriptor(Error.prototype, 'name')\n\tObject.defineProperty(this, 'name', {\n\t    configurable: true,\n\t    enumerable: false,\n\t    value: this.constructor.name,\n\t    writable: true,\n\t});\n\n\t// Helper function to merge stack traces\n\tconst merge =\n\t      (stackTraceToMerge, baseStackTrace) => {\n\t\t  const entriesToMerge = stackTraceToMerge.split('\\n');\n\t\t  const baseEntries = baseStackTrace.split('\\n');\n\t\t  const newEntries = [];\n\t\t  entriesToMerge.forEach((entry) => {\n\t\t      if (baseEntries.includes(entry)) {\n\t\t\t  return;\n\t\t      }\n\t\t      newEntries.push(entry);\n\t\t  });\n\t\t  return [...newEntries, ...baseEntries].join('\\n');\n\t      };\n\tif (Error.captureStackTrace) {\n\t    Error.captureStackTrace(this, this.constructor);\n\t    this.stack = error ? merge(this.stack, error.stack) : this.stack;\n\t}\n\t\n    }\n    \n};\n\nclass DuctEvent {\n    constructor() {\n    }\n};\n\nclass DuctConnectionEvent extends DuctEvent {\n\n    constructor(state, source) {\n\t    super();\n\t    this.state = state;\n\t    this.source = source;\n    }\n\n};\n\nclass DuctMessageEvent extends DuctEvent {\n\n    constructor(rid, eid, data) {\n\t    super();\n\t    this.rid = rid;\n\t    this.eid = eid;\n\t    this.data = data;\n    }\n\n};\n\nconst State = Object.freeze({\n    CLOSE : -1\n    , OPEN_CONNECTING : WebSocket.CONNECTING \n    , OPEN_CONNECTED : WebSocket.OPEN \n    , OPEN_CLOSING : WebSocket.CONNECTING \n    , OPEN_CLOSED : WebSocket.CLOSED \n});\n\nclass DuctEventListener {\n    \n    constructor() {\n\t    this.on =\n\t        (names, func) => {\n\t    \tfor(let name of (names instanceof Array) ? names : [names]) {\n\t    \t    if (!(name in this)) {\n\t    \t\tthrow new ReferenceError('['+name+'] in '+this.constructor.name);\n\t    \t    } \n\t    \t    this[name] = func;\n\t    \t}\n\t    \t\n\t        };\n\t\n    }\n};\n\nclass ConnectionEventListener extends DuctEventListener {\n    onopen(event){}\n    onclose(event){}\n    onerror(event){}\n    onmessage(event){}\n    \n};\n\nclass Duct {\n    \n    constructor() {\n\t    this.WSD = null;\n\t    this.EVENT = null;\n\t    this.encode = null;\n\t    this.decode = null;\n\t    \n        this.next_rid = \n            () => {\n                let next_id = new Date().getTime();\n                if (next_id <= this.last_rid) {\n                    next_id = this.last_rid + 1;\n                }\n                this.last_rid = next_id;\n                return next_id;\n            };\n\t    this.open =\n\t        (wsd_url, uuid = null, params = {}) => {return this._open(this, wsd_url, uuid, params);};\n\t    this.reconnect =\n\t        () => {return this._reconnect(this);};\n\t    this.send = \n\t        (request_id, event_id, data) => {return this._send(this, request_id, event_id, data)};\n\t    this.close =\n\t        () => {return this._close(this);};\n\n\t    this._connection_listener = new ConnectionEventListener();\n\t    \n\t    this._event_handler = {};\n\t    this.setEventHandler = \n\t        (event_id, handler) => {this._event_handler[event_id] = handler;};\n\t    this.catchall_event_handler = (rid, eid, data) => {};\n\t    this.uncaught_event_handler = (rid, eid, data) => {};\n\t    this.event_error_handler = (rid, eid, data, error) => {};\n\n        this.onopen_handlers = [];\n        this.add_onopen_handler = (handler) => { this.onopen_handlers.push(handler); };\n        this.invoke_on_open = (handler) => {\n            if(this.state==State.OPEN_CONNECTED) handler();\n            else this.add_onopen_handler(handler);\n        }\n    }\n\n    get state() {\n\t    if (this._ws) {\n\t        return this._ws.readyState;\n\t    } else {\n\t        return State.CLOSE;\n\t    }\n    }\n\n    _reconnect(self, wsd) {\n\t    if (wsd != null) {\n\t        self.WSD = wsd;\n\t        self.EVENT = self.WSD.EVENT;\n\t    }\n\t    return new Promise(function(resolve, reject) {\n\t        if (self._ws) {\n\t    \tresolve(self);\n\t    \treturn;\n\t        }\n\t        let ws = new WebSocket(self.WSD.websocket_url_reconnect);\n\t        ws.binaryType = 'arraybuffer';\n\t        ws.onopen = \n\t    \t(event) => {\n\t    \t    ws.onerror =\n\t    \t\t(event) => {self._connection_listener.onerror(new DuctConnectionEvent('onerror', event));};\n\t    \t    ws.onclose =\n\t    \t\t(event) => {self._connection_listener.onclose(new DuctConnectionEvent('onclose', event));};\n\t    \t    ws.onmessage = \n\t    \t\t(event) => {self._onmessage(self, new DuctConnectionEvent('onmessage', event));};\n\t    \t    self._ws = ws;\n\t    \t    self._onreconnect(self, event);\n\t    \t    self._connection_listener.onopen(new DuctConnectionEvent('onopen', event));\n\t    \t    resolve(self);\n\t    \t};\n\t        ws.onerror =\n\t    \t(event) => {\n\t    \t    self._connection_listener.onerror(new DuctConnectionEvent('onerror', event));\n\t    \t    reject(event);\n\t    \t};\n\t    });\n    }\n    \n    _open(self, wsd_url, uuid, params) {\n\t    return new Promise(function(resolve, reject) {\n\t        if (self._ws) {\n\t    \tresolve(self);\n\t    \treturn;\n\t        }\n\t        let query = uuid != null ? uuid : '?uuid='+([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c => (c ^ getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n\t        for (let [key, value] of Object.entries(params)) {\n\t    \tquery += '&'+key+'='+value;\n\t        }\n\t        fetch(wsd_url + query, { headers: { \"User-Agent\": \"\" } })\n\t    \t.then( response => {\n\t    \t    return response.json();\n\t    \t}).then( wsd => {\n\t    \t    //console.log(wsd);\n\t    \t    self.WSD = wsd;\n\t    \t    self.EVENT = self.WSD.EVENT;\n\t    \t    //console.log(self.WSD.websocket_url);\n\t    \t    let ws = new WebSocket(self.WSD.websocket_url);\n\t    \t    ws.binaryType = 'arraybuffer';\n\t    \t    ws.onopen = \n\t    \t\t(event) => {\n\t    \t\t    ws.onerror =\n\t    \t\t\t(event) => {self._connection_listener.onerror(new DuctConnectionEvent('onerror', event));};\n\t    \t\t    ws.onclose =\n\t    \t\t\t(event) => {self._connection_listener.onclose(new DuctConnectionEvent('onclose', event));};\n\t    \t\t    ws.onmessage = \n\t    \t\t\t(event) => {self._onmessage(self, new DuctConnectionEvent('onmessage', event));};\n\t    \t\t    self._ws = ws;\n\t    \t\t    self._onopen(self, event);\n\t    \t\t    self._connection_listener.onopen(new DuctConnectionEvent('onopen', event));\n\t    \t\t    resolve(self);\n\t    \t\t};\n\t    \t    ws.onerror =\n\t    \t\t(event) => {\n\t    \t\t    self._connection_listener.onerror(new DuctConnectionEvent('onerror', event));\n\t    \t\t    reject(event);\n\t    \t\t};\n\t    \t}).catch( (error) => {\n\t    \t    //console.error(error);\n\t    \t    self._connection_listener.onerror(new DuctConnectionEvent('onerror', error));\n\t    \t    reject(error);\n\t    \t});\n\t    });\n    }\n    \n    _onopen(self, event) {\n\t    self.encode = encode;\n\t    self.decode = decode;\n\t    self._send_timestamp = new Date().getTime() / 1000;\n\t    self.time_offset = 0;\n\t    self.time_latency = 0;\n\t    self._time_count = 0;\n\t    self.setEventHandler(this.EVENT.ALIVE_MONITORING, (rid, eid, data) => {\n\t        let client_received = new Date().getTime() / 1000;\n\t        let server_sent = data[0];\n\t        let server_received = data[1];\n\t        let client_sent = this._send_timestamp;\n\t        //console.log('t0='+client_sent+', t1='+server_received+', t2='+server_sent+',t3='+client_received);\n\t        let new_offset = ((server_received - client_sent) - (client_received - server_sent))/2;\n\t        let new_latency = ((client_received - client_sent) - (server_sent - server_received))/2;\n\t        this.time_offset = (this.time_offset * this._time_count + new_offset) / (this._time_count + 1);\n\t        this.time_latency = (this.time_latency * this._time_count + new_latency) / (this._time_count + 1);\n\t        this._time_count += 1;\n\t        //console.log('offset='+this.time_offset+', latency='+this.time_latency);\n\t    });\n\t    let rid = self.next_rid();\n\t    let eid = self.EVENT.ALIVE_MONITORING;\n\t    let value = self._send_timestamp;\n\t    self.send(rid, eid, value);\n\n        for(const handler of this.onopen_handlers)  handler();\n    }\n    \n    _onreconnect(self, event) {\n\t    //console.log('reconnected');\n    }\n    \n    _send(self, request_id, event_id, data) {\n\t    const msgpack = self.encode([request_id, event_id, data])\n\t    self._ws.send(msgpack)\n\t    return request_id;\n    }\n    \n    _close(self) {\n\t    try {\n\t        if (self._ws) {\n\t    \tself._ws.close();\n\t        }\n\t    } finally {\n\t        self._ws = null;\n\t    }\n    }\n    \n    _onmessage(self, event) {\n\t    try {\n\t        self._connection_listener.onmessage(event);\n\t        const [rid, eid, data] = self.decode(Buffer.from(event.source.data));\n\t        try {\n\t    \tself.catchall_event_handler(rid, eid, data);\n\t    \tlet handle = (eid in self._event_handler) ? self._event_handler[eid] : self.uncaught_event_handler;\n\t    \thandle(rid, eid, data);\n\t        } catch(error) {\n\t    \tself.event_error_handler(rid, eid, data, error);\n\t        }\n\t    }\n\t    catch (error) {\n\t        self.event_error_handler(-1, -1, null, error);\n\t    }\n    }\n};\n\nmodule.exports = {\n    DuctError,\n    DuctEvent,\n    DuctConnectionEvent,\n    DuctMessageEvent,\n    State,\n    DuctEventListener,\n    ConnectionEventListener,\n    Duct\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var window = require('global/window');\nvar nodeCrypto = require('crypto');\n\nfunction getRandomValues(buf) {\n  if (window.crypto && window.crypto.getRandomValues) {\n    return window.crypto.getRandomValues(buf);\n  }\n  if (typeof window.msCrypto === 'object' && typeof window.msCrypto.getRandomValues === 'function') {\n    return window.msCrypto.getRandomValues(buf);\n  }\n  if (nodeCrypto.randomBytes) {\n    if (!(buf instanceof Uint8Array)) {\n      throw new TypeError('expected Uint8Array');\n    }\n    if (buf.length > 65536) {\n      var e = new Error();\n      e.code = 22;\n      e.message = 'Failed to execute \\'getRandomValues\\' on \\'Crypto\\': The ' +\n        'ArrayBufferView\\'s byte length (' + buf.length + ') exceeds the ' +\n        'number of bytes of entropy available via this API (65536).';\n      e.name = 'QuotaExceededError';\n      throw e;\n    }\n    var bytes = nodeCrypto.randomBytes(buf.length);\n    buf.set(bytes);\n    return buf;\n  }\n  else {\n    throw new Error('No secure random number generator available.');\n  }\n}\n\nmodule.exports = getRandomValues;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","'use strict';\n\nconst BYTE_UNITS = [\n\t'B',\n\t'kB',\n\t'MB',\n\t'GB',\n\t'TB',\n\t'PB',\n\t'EB',\n\t'ZB',\n\t'YB'\n];\n\nconst BIBYTE_UNITS = [\n\t'B',\n\t'kiB',\n\t'MiB',\n\t'GiB',\n\t'TiB',\n\t'PiB',\n\t'EiB',\n\t'ZiB',\n\t'YiB'\n];\n\nconst BIT_UNITS = [\n\t'b',\n\t'kbit',\n\t'Mbit',\n\t'Gbit',\n\t'Tbit',\n\t'Pbit',\n\t'Ebit',\n\t'Zbit',\n\t'Ybit'\n];\n\nconst BIBIT_UNITS = [\n\t'b',\n\t'kibit',\n\t'Mibit',\n\t'Gibit',\n\t'Tibit',\n\t'Pibit',\n\t'Eibit',\n\t'Zibit',\n\t'Yibit'\n];\n\n/*\nFormats the given number using `Number#toLocaleString`.\n- If locale is a string, the value is expected to be a locale-key (for example: `de`).\n- If locale is true, the system default locale is used for translation.\n- If no value for locale is specified, the number is returned unmodified.\n*/\nconst toLocaleString = (number, locale) => {\n\tlet result = number;\n\tif (typeof locale === 'string' || Array.isArray(locale)) {\n\t\tresult = number.toLocaleString(locale);\n\t} else if (locale === true) {\n\t\tresult = number.toLocaleString();\n\t}\n\n\treturn result;\n};\n\nmodule.exports = (number, options) => {\n\tif (!Number.isFinite(number)) {\n\t\tthrow new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);\n\t}\n\n\toptions = Object.assign({bits: false, binary: false}, options);\n\n\tconst UNITS = options.bits ?\n\t\t(options.binary ? BIBIT_UNITS : BIT_UNITS) :\n\t\t(options.binary ? BIBYTE_UNITS : BYTE_UNITS);\n\n\tif (options.signed && number === 0) {\n\t\treturn ` 0 ${UNITS[0]}`;\n\t}\n\n\tconst isNegative = number < 0;\n\tconst prefix = isNegative ? '-' : (options.signed ? '+' : '');\n\n\tif (isNegative) {\n\t\tnumber = -number;\n\t}\n\n\tif (number < 1) {\n\t\tconst numberString = toLocaleString(number, options.locale);\n\t\treturn prefix + numberString + ' ' + UNITS[0];\n\t}\n\n\tconst exponent = Math.min(Math.floor(options.binary ? Math.log(number) / Math.log(1024) : Math.log10(number) / 3), UNITS.length - 1);\n\t// eslint-disable-next-line unicorn/prefer-exponentiation-operator\n\tnumber = Number((number / Math.pow(options.binary ? 1024 : 1000, exponent)).toPrecision(3));\n\tconst numberString = toLocaleString(number, options.locale);\n\n\tconst unit = UNITS[exponent];\n\n\treturn prefix + numberString + ' ' + unit;\n};\n","var _globalThis;\ntry {\n\t_globalThis = require('es5-ext/global');\n} catch (error) {\n} finally {\n\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n","\n/* eslint-disable no-console */\n\nconst pb = require('pretty-bytes');\nconst Buffer = require('buffer').Buffer;\n\nconst initialize = (tempBufferLength, logFunction) => {\n  if (typeof tempBufferLength !== 'number' || Number.isNaN(tempBufferLength) === true) {\n    throw Error('@initialize : expecting \"tempBufferLength\" to be a number.');\n  }\n  if (tempBufferLength < 1) {\n    throw Error('@initialize : expecting \"tempBufferLength\" to be greater than zero.');\n  }\n  if (logFunction !== undefined) {\n    if (typeof logFunction !== 'function') {\n      throw Error('@initialize : expecting \"logFunction\" to be a function.');\n    }\n    logFunction(`@initialize : setting buffer limit to ${pb(tempBufferLength)}`);\n  }\n  const dictionary = {};\n  let dictionaryEnabled = false;\n  let dictionaryOffset = -33;\n  /**\n   * Why -33:\n   * - This allows us to use the negative (-32 to -1) and positive fixint range (0 to 127)\n   * - So instead of encoding the whole key string, we only encode a single byte\n   * - That's (32 + 128) = 160 of your first entries being encoded in a single damn byte\n   */\n  const register = (...args) => {\n    if (dictionaryEnabled === false) dictionaryEnabled = true;\n    for (let i = 0, l = args.length; i < l; i += 1) {\n      dictionaryOffset += 1;\n      dictionary[dictionaryOffset] = args[i];\n      dictionary[args[i]] = dictionaryOffset;\n    }\n  };\n  const tempEncodeBuffer = Buffer.allocUnsafe(tempBufferLength).fill(0);\n  let tempEncodeBufferOffset = -1;\n  const internalEncode = (value) => {\n    let length = 0;\n    switch (typeof value) {\n      case 'string':\n        length = Buffer.byteLength(value);\n        if (length < 32) { // < 32, fixstr\n          length = 0;\n          for (let i = 0, c = 0, l = value.length; i < l; i += 1) {\n            c = value.charCodeAt(i);\n            if (c < 128) {\n              length += 1;\n            } else if (c < 1280) {\n              length += 2;\n            } else if (c < 55296 || c >= 57344) {\n              length += 3;\n            } else {\n              i += 1;\n              length += 4;\n            }\n          }\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length | 160;\n          for (let i = 0, c = 0, l = value.length; i < l; i += 1) {\n            c = value.charCodeAt(i);\n            if (c < 128) {\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = c;\n            } else if (c < 1280) {\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 192 | (c >> 6);\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c & 63);\n            } else if (c < 55296 || c >= 57344) {\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 224 | (c >> 12);\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c >> 6) & 63;\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c & 63);\n            } else {\n              i += 1;\n              c = 65536 + (((c & 1023) << 10) | (value.charCodeAt(i) & 1023));\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 240 | (c >> 18);\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c >> 12) & 63;\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c >> 6) & 63;\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c & 63);\n            }\n          }\n        } else if (length < 256) { // str8\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 217;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          tempEncodeBuffer.write(value, tempEncodeBufferOffset += 1, length, 'utf8');\n          tempEncodeBufferOffset += length - 1;\n        } else if (length < 65536) { // str16\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 218;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          tempEncodeBuffer.write(value, tempEncodeBufferOffset += 1, length, 'utf8');\n          tempEncodeBufferOffset += length - 1;\n        } else if (length < 4294967296) { // str32\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 219;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 24;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 16;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          tempEncodeBuffer.write(value, tempEncodeBufferOffset += 1, length, 'utf8');\n          tempEncodeBufferOffset += length - 1;\n        } else {\n          throw Error('@internalEncode : Max supported string length (4294967296) exceeded, encoding failure.');\n        }\n        break;\n      case 'number':\n        if (Number.isFinite(value) === false) {\n          if (Number.isNaN(value) === true) { // NaN, fixext 1, type = 0, data = 1\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 212;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 0;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 1;\n            break;\n          }\n          if (value === Infinity) { // +Infinity, fixext 1, type = 0, data = 2\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 212;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 0;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 2;\n            break;\n          }\n          if (value === -Infinity) { // -Infinity, fixext 1, type = 0, data = 3\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 212;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 0;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 3;\n            break;\n          }\n        }\n        if (Math.floor(value) !== value) {\n          if (Math.fround(value) === value) {\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 202;\n            tempEncodeBuffer.writeFloatBE(value, tempEncodeBufferOffset += 1);\n            tempEncodeBufferOffset += 3;\n            break;\n          } else {\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 203;\n            tempEncodeBuffer.writeDoubleBE(value, tempEncodeBufferOffset += 1);\n            tempEncodeBufferOffset += 7;\n            break;\n          }\n        }\n        if (value >= 0) {\n          if (value < 128) { // positive fixint\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value < 256) { // uint 8\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 204;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value < 65536) {  // uint 16\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 205;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value < 4294967296) { // uint 32\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 206;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 24;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 16;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          // uint 64\n          let hi = (value / Math.pow(2, 32)) >> 0, lo = value >>> 0;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 207;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 24;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 16;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 24;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 16;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo;\n        } else {\n          if (value >= -32) { // negative fixint\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value >= -128) { // int 8\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 208;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value >= -12800) { // int 16\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 209;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value >= -128000000) { // int 32\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 210;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 24;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 16;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          // int 64\n          let hi = Math.floor(value / Math.pow(2, 32)), lo = value >>> 0;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 211;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 24;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 16;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 24;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 16;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo;\n        }\n        break;\n      case 'object':\n        if (value === null) { // null\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 192;\n          break;\n        }\n        if (Array.isArray(value) === true) {\n          length = value.length;\n          if (length < 16) { // fixarray\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length | 144;\n          } else if (length < 65536) { // array 16\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 220;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          } else if (length < 4294967296) { // array 32\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 221;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 24;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 16;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          } else {\n            throw new Error('@internalEncode : Array too large');\n          }\n          for (let i = 0; i < length; i += 1) {\n            internalEncode(value[i]);\n          }\n          break;\n        }\n        if (value instanceof ArrayBuffer) { // arraybuffer to buffer\n          value = Buffer.from(value);\n        }\n        if (\n          value instanceof Buffer === false &&\n          (\n            value instanceof Int8Array\n            || value instanceof Int16Array\n            || value instanceof Int32Array\n            || value instanceof Uint8Array\n            || value instanceof Uint8ClampedArray\n            || value instanceof Uint16Array\n            || value instanceof Uint32Array\n            || value instanceof Float32Array\n            || value instanceof Float64Array\n          )\n        ) {\n          let temp = Buffer.from(value.buffer);\n          if (value.byteLength !== value.buffer.byteLength) {\n            temp = temp.slice(value.byteOffset, value.byteOffset + value.byteLength)\n          }\n          value = temp;\n        }\n        if (value instanceof Buffer) { // typedarrays and buffer\n          length = value.length;\n          if (length < 256) { // bin8\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 196;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n            if (length > 32) {\n              value.copy(tempEncodeBuffer, tempEncodeBufferOffset += 1, 0, length);\n              tempEncodeBufferOffset += length - 1;\n            } else {\n              for (let i = 0; i < length; i++) {\n                tempEncodeBuffer[tempEncodeBufferOffset += 1] = value[i];\n              }\n            }\n          } else if (length < 65536) { // bin16\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 197;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n            value.copy(tempEncodeBuffer, tempEncodeBufferOffset += 1, 0, length);\n            tempEncodeBufferOffset += length - 1;\n          } else if (length < 4294967296) { // bin32\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 198;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 24;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 16;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n            value.copy(tempEncodeBuffer, tempEncodeBufferOffset += 1, 0, length);\n            tempEncodeBufferOffset += length - 1;\n          } else {\n            throw Error('@internalEncode : Max supported buffer length (4294967296) exceeded, encoding failure.');\n          }\n          break;\n        } else { // plain javascript object\n          let keys = Object.keys(value);\n          length = keys.length;\n          if (length < 16) { // fixmap\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length | 128;\n          } else if (length < 65536) { // map16\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 222;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          } else if (length < 4294967296) { // map32\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 223;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 24;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 16;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          } else {\n            throw new Error('@internalEncode : Object too large');\n          }\n          if (dictionaryEnabled === true) {\n            for (let i = 0; i < length; i += 1) {\n              internalEncode(dictionary[keys[i]] || keys[i]);\n              internalEncode(value[keys[i]]);\n            }\n          } else {\n            for (let i = 0; i < length; i += 1) {\n              internalEncode(keys[i]);\n              internalEncode(value[keys[i]]);\n            }\n          }\n        }\n        break;\n      default:\n        switch (value) {\n          case true:  // true\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] =  195;\n            break;\n          case false: // false\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] =  194;\n            break;\n          case undefined: // undefined, fixext 1, type = 0, data = 0\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 212;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 0;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 0;\n            break;\n          default:\n            throw Error('@internalEncode : Error encoding value.');\n        }\n    }\n  };\n  const encode = (value) => {\n    tempEncodeBufferOffset = -1;\n    internalEncode(value);\n    const encoded = Buffer.allocUnsafe(tempEncodeBufferOffset + 1).fill(0);\n    tempEncodeBuffer.copy(encoded, 0, 0, tempEncodeBufferOffset + 1);\n    return encoded;\n  };\n  let tempDecodeBuffer = undefined;\n  let tempDecodeBufferOffset = 0;\n  const internalDecode = () => {\n    let value, length;\n    if (tempDecodeBuffer[tempDecodeBufferOffset] < 192) {\n      if (tempDecodeBuffer[tempDecodeBufferOffset] < 128) { // positive fixint\n        value = tempDecodeBuffer[tempDecodeBufferOffset];\n        tempDecodeBufferOffset += 1;\n        return value;\n      } else if (tempDecodeBuffer[tempDecodeBufferOffset] < 144) { // fixmap\n        length = tempDecodeBuffer[tempDecodeBufferOffset] & 31;\n        value = {};\n        tempDecodeBufferOffset += 1;\n        if (dictionaryEnabled === true) {\n          for (let i = 0, key; i < length; i++) {\n            key = internalDecode();\n            value[dictionary[key] || key] = internalDecode();\n          }\n        } else {\n          for (let i = 0; i < length; i++) {\n            value[internalDecode()] = internalDecode();\n          }\n        }\n        return value;\n      } else if (tempDecodeBuffer[tempDecodeBufferOffset] < 160) { // fixarray\n        length = tempDecodeBuffer[tempDecodeBufferOffset] & 15;\n        tempDecodeBufferOffset += 1;\n        value = new Array(length);\n        for (let i = 0; i < length; i += 1) {\n          value[i] = internalDecode();\n        }\n        return value;\n      } else { // fixstr\n        length = tempDecodeBuffer[tempDecodeBufferOffset] & 31;\n        tempDecodeBufferOffset += 1;\n        value = tempDecodeBuffer.toString('utf8', tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n        tempDecodeBufferOffset += length;\n        return value;\n      }\n    } else if (tempDecodeBuffer[tempDecodeBufferOffset] > 223) { // negative fixint\n      value = (255 - tempDecodeBuffer[tempDecodeBufferOffset] + 1) * -1;\n      tempDecodeBufferOffset += 1;\n      return value;\n    } else {\n      switch (tempDecodeBuffer[tempDecodeBufferOffset]) {\n        case 202: // float 32\n          value = tempDecodeBuffer.readFloatBE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          return value;\n        case 203: // float 64\n          value = tempDecodeBuffer.readDoubleBE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 8;\n          return value;\n        case 204: // uint 8\n          value = tempDecodeBuffer.readUInt8(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 1;\n          return value;\n        case 205: // uint 16\n          value = tempDecodeBuffer.readUInt16BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 2;\n          return value;\n        case 206: // uint 32\n          value = tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          return value;\n        case 207: // uint 64\n          value = ( tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1) * Math.pow(2, 32) ) + tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 4);\n          tempDecodeBufferOffset += 4;\n          return value;\n        case 208: // int 8\n          value = tempDecodeBuffer.readInt8(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 1;\n          return value;\n        case 209: // int 16\n          value = tempDecodeBuffer.readInt16BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 2;\n          return value;\n        case 210: // int 32\n          value = tempDecodeBuffer.readInt32BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          return value;\n        case 211: // int 64\n          value = ( tempDecodeBuffer.readInt32BE(tempDecodeBufferOffset += 1) * Math.pow(2, 32) ) + tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 4);\n          tempDecodeBufferOffset += 4;\n          return value;\n\n        case 217: // str 8\n          length = tempDecodeBuffer.readUInt8(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 1;\n          value = tempDecodeBuffer.toString('utf8', tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n        case 218: // str 16\n          length = tempDecodeBuffer.readUInt16BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 2;\n          value = tempDecodeBuffer.toString('utf8', tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n        case 219: // str 32\n          length = tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          value = tempDecodeBuffer.toString('utf8', tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n\n        case 212: // fixext 1\n          switch ( tempDecodeBuffer.readInt8(tempDecodeBufferOffset += 1) ) { // fixext 1, type = ?\n            case 0:\n              switch ( tempDecodeBuffer.readInt8(tempDecodeBufferOffset += 1) ) { // fixext 1, type = 0, data = ?\n                case 0: // undefined, fixext 1, type = 0, data = 0\n                  value = undefined;\n                  tempDecodeBufferOffset += 1;\n                  return value;\n                case 1: // NaN, fixext 1, type = 0, data = 1\n                  value = NaN;\n                  tempDecodeBufferOffset += 1;\n                  return value;\n                case 2: // +Infinity, fixext 1, type = 0, data = 2\n                  value = Infinity;\n                  tempDecodeBufferOffset += 1;\n                  return value;\n                case 3: // -Infinity, fixext 1, type = 0, data = 3\n                  value = -Infinity;\n                  tempDecodeBufferOffset += 1;\n                  return value;\n              }\n            break;\n          }\n          break;\n        case 192: // nil\n          value = null;\n          tempDecodeBufferOffset += 1;\n          return value;\n        case 194: // false\n          value = false;\n          tempDecodeBufferOffset += 1;\n          return value;\n        case 195: // true\n          value = true;\n          tempDecodeBufferOffset += 1;\n          return value;\n        case 220: // array16\n          length = tempDecodeBuffer.readUInt16BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 2;\n          value = new Array(length);\n          for (let i = 0; i < length; i += 1) {\n            value[i] = internalDecode();\n          }\n          return value;\n        case 221: // array32\n          length = tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          value = new Array(length);\n          for (let i = 0; i < length; i += 1) {\n            value[i] = internalDecode();\n          }\n          return value;\n        case 222: // map16\n          length = tempDecodeBuffer.readUInt16BE(tempDecodeBufferOffset += 1);\n          value = {};\n          tempDecodeBufferOffset += 2;\n          if (dictionaryEnabled === true) {\n            for (let i = 0, key; i < length; i++) {\n              key = internalDecode();\n              value[dictionary[key] || key] = internalDecode();\n            }\n          } else {\n            for (let i = 0; i < length; i++) {\n              value[internalDecode()] = internalDecode();\n            }\n          }\n          return value;\n        case 223: // map32\n          length = tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1);\n          value = {};\n          tempDecodeBufferOffset += 4;\n          if (dictionaryEnabled === true) {\n            for (let i = 0, key; i < length; i++) {\n              key = internalDecode();\n              value[dictionary[key] || key] = internalDecode();\n            }\n          } else {\n            for (let i = 0; i < length; i++) {\n              value[internalDecode()] = internalDecode();\n            }\n          }\n          return value;\n        case 196: // bin8\n          length = tempDecodeBuffer.readUInt8(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 1;\n          value = tempDecodeBuffer.slice(tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n        case 197: // bin16\n          length = tempDecodeBuffer.readUInt16BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 2;\n          value = tempDecodeBuffer.slice(tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n        case 198: // bin32\n          length = tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          value = tempDecodeBuffer.slice(tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n      }\n      throw Error('@internalDecode : Error decoding value.');\n    }\n  };\n  const decode = (buffer) => {\n    tempDecodeBuffer = buffer;\n    tempDecodeBufferOffset = 0;\n    const result = internalDecode();\n    tempDecodeBuffer = undefined;\n    return result;\n  };\n  return { encode, decode, register };\n};\n\nmodule.exports = { initialize, Buffer };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(10);\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();"],"sourceRoot":""}